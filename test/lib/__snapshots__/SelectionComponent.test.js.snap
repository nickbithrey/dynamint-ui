// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SelectionComponent /> rendering can render standard component with records 1`] = `
<div>
  <div>
    <h1>
      titleText
    </h1>
  </div>
  <Rowise
    tokens={
      Object {
        "childrenGap": 10,
      }
    }
  >
    <Block>
      <StyledMarqueeSelectionBase
        selection={
          Selection {
            "_anchoredIndex": 0,
            "_canSelectItem": [Function],
            "_changeEventSuppressionCount": 0,
            "_exemptedCount": 0,
            "_exemptedIndices": Object {},
            "_getKey": [Function],
            "_isModal": false,
            "_items": Array [],
            "_keyToIndexMap": Object {},
            "_onSelectionChanged": [Function],
            "_selectedItems": null,
            "_unselectableCount": 0,
            "_unselectableIndices": Object {},
            "count": 0,
            "mode": 2,
          }
        }
      >
        <Table
          columns={Array []}
          list={Array []}
          load={[MockFunction]}
          selection={
            Selection {
              "_anchoredIndex": 0,
              "_canSelectItem": [Function],
              "_changeEventSuppressionCount": 0,
              "_exemptedCount": 0,
              "_exemptedIndices": Object {},
              "_getKey": [Function],
              "_isModal": false,
              "_items": Array [],
              "_keyToIndexMap": Object {},
              "_onSelectionChanged": [Function],
              "_selectedItems": null,
              "_unselectableCount": 0,
              "_unselectableIndices": Object {},
              "count": 0,
              "mode": 2,
            }
          }
        />
      </StyledMarqueeSelectionBase>
    </Block>
    <Block>
      <Columnar
        horizontalAlign="end"
        tokens={
          Object {
            "childrenGap": 5,
          }
        }
      >
        <ButtonsContainer>
          <Link
            key="0"
            replace={false}
            to={
              Object {
                "pathname": "path",
                "state": Object {},
              }
            }
          >
            <Button
              text="Edit"
              type="standard"
            />
          </Link>
          <Link
            key="1"
            replace={false}
            to={
              Object {
                "pathname": "path",
                "state": Object {},
              }
            }
          >
            <Button
              text="Create"
              type="standard"
            />
          </Link>
        </ButtonsContainer>
      </Columnar>
    </Block>
  </Rowise>
</div>
`;
